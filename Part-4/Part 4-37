# Given a list of integers, let's decide that two consecutive items in the list are neighbours if their difference is 1. 
So, items 1 and 2 would be neighbours, and so would items 56 and 55.

Please write a function named longest_series_of_neighbours, which looks for the longest series of neighbours within the list, and returns its length.

For example, in the list [1, 2, 5, 4, 3, 4] the longest list of neighbours would be [5, 4, 3, 4], with a length of 4.


def longest_series_of_neighbours(my_list):
    j = 1
    i = 1
    k = list()
    while i < len(my_list) :
        
        if abs(my_list[i]-my_list[i-1]) == 1:

            j = j+1         
            print(j)
            k.append(j)
            
        else: 
            my_list = my_list[i-1:]
            print (my_list)
            
            j= 1
            
            i = 1
        i = i+1
    print(k)
    return max(k)





if __name__ == "__main__":
    my_list = [1, 3, 5, 7, 10, 11, 14, 15, 19, 20, 21, 22, 23, 24, 25, 30]
    print(longest_series_of_neighbours(my_list))
